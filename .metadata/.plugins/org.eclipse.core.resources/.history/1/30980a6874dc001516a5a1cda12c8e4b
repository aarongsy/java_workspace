package drawlinedouble;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;

import javax.swing.*;

public class FrameTestBase extends JFrame {

    public static void main(String args[]) {
        FrameTestBase t = new FrameTestBase();
        t.add(new JComponent() {
            public void paintComponent(Graphics g) {
                Graphics2D g2 = (Graphics2D) g;
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                                    RenderingHints.VALUE_ANTIALIAS_ON);
                double[] x = new double[]{17.0,23.0,23.0,22.0,22.0,27.0,27.0,26.0,26.0,25.0,25.0,24.0,24.0,23.0,23.0,22.0,22.0,21.0,21.0,20.0,20.0,19.0,19.0,17.0,17.0,18.0,18.0,19.0,19.0,23.0,23.0,22.0,22.0,21.0,21.0,20.0,20.0,19.0,19.0,17.0,17.0,16.0,16.0,15.0,15.0,14.0,14.0,13.0,13.0,12.0,12.0,11.0,11.0,10.0,10.0,9.0,9.0,8.0,8.0,7.0,7.0,6.0,6.0,5.0,5.0,4.0,4.0,3.0,3.0,2.0,2.0,0.0,0.0,2.0,2.0,-1.0,-1.0,4.0,4.0,2.0,2.0,8.0,8.0,5.0,5.0,10.0,10.0,6.0,6.0,7.0,7.0,8.0,8.0,12.0,12.0,9.0,9.0,14.0,14.0,13.0,13.0,16.0,16.0,12.0,12.0,11.0,11.0,9.0,9.0,11.0,11.0,7.0,7.0,6.0,6.0,5.0,5.0,4.0,4.0,2.0,2.0,3.0,3.0,2.0,2.0,1.0,1.0,0.0,0.0,-1.0,-1.0,-2.0,-2.0,-3.0,-3.0,-4.0,-4.0,-5.0,-5.0,-7.0,-7.0,-5.0,-5.0,-10.0,-10.0,-5.0,-5.0,-9.0,-9.0,-8.0,-8.0,-11.0,-11.0,-10.0,-10.0,-15.0,-15.0,-14.0,-14.0,-17.0,-17.0,-16.0,-16.0,-20.0,-20.0,-16.0,-16.0,-15.0,-15.0,-14.0,-14.0,-13.0,-13.0,-10.0,-10.0,-9.0,-9.0,-8.0,-8.0,-7.0,-7.0,-3.0,-3.0,-5.0,-5.0,1.0,1.0,-4.0,-4.0,1.0,1.0,0.0,0.0,1.0,1.0,-3.0,-3.0,-2.0,-2.0,-1.0,-1.0,1.0,1.0,2.0,2.0,3.0,3.0,4.0,4.0,5.0,5.0,6.0,6.0,7.0,7.0,8.0,8.0,9.0,9.0,10.0,10.0,11.0,11.0,6.0,6.0,12.0,12.0,6.0,6.0,10.0,10.0,4.0,4.0,8.0,8.0,7.0,7.0,13.0,13.0,12.0,12.0,18.0,18.0,17.0};
                double[] y = new double[]{4.0,4.0,5.0,5.0,6.0,6.0,7.0,7.0,9.0,9.0,7.0,7.0,12.0,12.0,11.0,11.0,13.0,13.0,11.0,11.0,13.0,13.0,11.0,11.0,10.0,10.0,8.0,8.0,10.0,10.0,7.0,7.0,9.0,9.0,5.0,5.0,7.0,7.0,5.0,5.0,6.0,6.0,5.0,5.0,8.0,8.0,7.0,7.0,11.0,11.0,10.0,10.0,13.0,13.0,12.0,12.0,16.0,16.0,15.0,15.0,17.0,17.0,15.0,15.0,20.0,20.0,19.0,19.0,24.0,24.0,23.0,23.0,22.0,22.0,19.0,19.0,18.0,18.0,15.0,15.0,14.0,14.0,12.0,12.0,11.0,11.0,10.0,10.0,9.0,9.0,6.0,6.0,9.0,9.0,7.0,7.0,6.0,6.0,5.0,5.0,4.0,4.0,3.0,3.0,5.0,5.0,4.0,4.0,3.0,3.0,1.0,1.0,3.0,3.0,-1.0,-1.0,4.0,4.0,-1.0,-1.0,0.0,0.0,1.0,1.0,7.0,7.0,6.0,6.0,8.0,8.0,6.0,6.0,9.0,9.0,8.0,8.0,14.0,14.0,13.0,13.0,12.0,12.0,11.0,11.0,10.0,10.0,8.0,8.0,7.0,7.0,6.0,6.0,5.0,5.0,4.0,4.0,3.0,3.0,2.0,2.0,1.0,1.0,0.0,0.0,-1.0,-1.0,-4.0,-4.0,1.0,1.0,0.0,0.0,3.0,3.0,1.0,1.0,5.0,5.0,4.0,4.0,7.0,7.0,6.0,6.0,5.0,5.0,4.0,4.0,3.0,3.0,1.0,1.0,0.0,0.0,-1.0,-1.0,-2.0,-2.0,-4.0,-4.0,-2.0,-2.0,-3.0,-3.0,-2.0,-2.0,-6.0,-6.0,-5.0,-5.0,-11.0,-11.0,-10.0,-10.0,-12.0,-12.0,-10.0,-10.0,-12.0,-12.0,-10.0,-10.0,-9.0,-9.0,-8.0,-8.0,-7.0,-7.0,-5.0,-5.0,-4.0,-4.0,-2.0,-2.0,-1.0,-1.0,0.0,0.0,1.0,1.0,2.0,2.0,3.0,3.0};
                double[] x1= new double[512];
                double[] y1= new double[512];
                double[] x2= new double[512];
                double[] y2= new double[512];
                int vertices = 243;//size - 1
                double multi = 12.0;
                double multi2 = 2.0;
                double mover = 50.0;
                Font myFont = new Font ("Courier New",1,10);
                
                for (int i = 0; i < vertices; i++){
                	 x1[i] = (x[i]+mover) * multi;
                	 x2[i] = (x[i+1]+mover) * multi;
                	 y1[i] = (y[i]+mover)  * multi;
                	 y2[i] = (y[i+1]+mover) * multi;
                	// y1[i] = (y[i]+mover)  * multi2;
                	 //y2[i] = (y[i+1]+mover) * multi2;
                	 
                	//System.out.println(i);
                	//System.out.println(x1+","+y1);
                	Shape l = new Line2D.Double(x1[i],y1[i],x2[i],y2[i]);
                	//Shape l = new Line2D.Double(1,2,3,4);
        			g2.setColor(Color.black);
        	        g2.draw(l);
        	        g2.fill(l);
        	        /*Ellipse2D.Double j = new Ellipse2D.Double(x1[i],y1[i], 3, 3);
                    g2.setColor(Color.black);
                    g2.fill(j);*/
        	        g2.setColor(Color.red);
        	        String str =Integer.toString(i);
        	        g2.setFont(myFont);
                    g2.drawString(str, (float)x1[i],(float) y1[i]);
        		 }
                
            }
        });

        t.setDefaultCloseOperation(EXIT_ON_CLOSE);
        t.setSize(2000, 2000);
        t.setVisible(true);
    }
}